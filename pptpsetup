#!/usr/bin/perl

use strict;
use Getopt::Long;

my ( $SERVER, $TUNNEL, $DOMAIN, $USERNAME, $PASSWORD, $ENCRYPT, $NOSTART );

my $result = GetOptions(
    "server|s=s"   => \$SERVER,
    "tunnel|t=s"   => \$TUNNEL,
    "domain|d=s"   => \$DOMAIN,
    "username|u=s" => \$USERNAME,
    "password|p=s" => \$PASSWORD,
    "encrypt|e"    => \$ENCRYPT,
    "nostart"      => \$NOSTART,
    "help|h"       => \&help
);

# input validation
($SERVER)     = $SERVER     =~ m{^(.+)$}    or die "Invalid server ('$SERVER').\n";
($TUNNEL)     = $TUNNEL     =~ m{^(\w+)$}   or die "Invalid tunnel ('$TUNNEL').\n";
($DOMAIN)     = $DOMAIN     =~ m{^(.*)$};
($USERNAME)   = $USERNAME   =~ m{^(.+)$}    or die "Invalid username ('$USERNAME').\n";
($PASSWORD)   = $PASSWORD   =~ m{^(.+)$}    or warn "Warning: null password!\n";
($ENCRYPT)    = $ENCRYPT    =~ m{^(.*)$};
($NOSTART)    = $NOSTART    =~ m{^(.*)$};

# put '\' between domain and username IF specified a domain
$DOMAIN = "$DOMAIN\\" if $DOMAIN;

# CONFIGURE

# create or add lines to the /etc/ppp/chap-secrets file, which holds usernames and passwords
my $chap_secrets_file = '/etc/ppp/chap-secrets';
open( FILE, ">>$chap_secrets_file" )
  or die "Can't write '$chap_secrets_file\n': $!";

print FILE "# added by pptpsetup\n$DOMAIN$USERNAME $TUNNEL \"$PASSWORD\" *\n";

close FILE;

# create a /etc/ppp/peers/$TUNNEL file
my $tunnel_file = "/etc/ppp/peers/$TUNNEL";
open( FILE, ">$tunnel_file" )
  or die "Can't write '$tunnel_file': $!\n";

print FILE <<"TUNNEL";
# written by pptpsetup
pty "pptp $SERVER --nolaunchpppd"
lock
noauth
nobsdcomp
nodeflate
name $DOMAIN$USERNAME
remotename $TUNNEL
ipparam $TUNNEL
TUNNEL

print FILE "require-mppe-128\n" if $ENCRYPT;

close FILE;

# start tunneling with pon
system("pppd call $TUNNEL updetach") unless $NOSTART;

###

sub help {
    print <<'EOF';
pptpsetup version 1.0, Copyright (C) 2006 Nelson Ferraz
pptpsetup comes with ABSOLUTELY NO WARRANTY; for details see source.
This is free software, and you are welcome to redistribute it
under certain conditions; see source for details.

pptpsetup --server <SERVER> --tunnel <TUNNEL> [--domain <DOMAIN>]
          --username <USERNAME> --password <PASSWORD>
          [--encrypt] [--nostart]

Flags:

* the IP address or host name of the server,
* the name you wish to use to refer to the tunnel (you choose it),
* the authentication domain name (optional),
* the username you are to use,
* the password you are to use,
* whether encryption is required,
* whether to not start the connection after configuration.
EOF

    exit;
}

__END__

=head1 NAME

pptpsetup - Point-to-Point Tunneling Protocol setup

=head1 SYNOPSIS

    ppptsetup --server <SERVER> --tunnel <TUNNEL> [--domain <DOMAIN>]
              --username <USERNAME> --password <PASSWORD>
              [--encrypt] [--dont-start]>

=head1 DESCRIPTION

PPTP Client is a Linux, FreeBSD, NetBSD and OpenBSD client for the 
proprietary Microsoft Point-to-Point Tunneling Protocol, PPTP. 

This script configures PPTP Client on Linux.

=head1 OPTIONS

=over 16

=item server

the IP address or host name of the server

=item tunnel

the name you wish to use to refer to the tunnel (you choose it)

=item domain

the authentication domain name (optional)

=item username

the username you are to use

=item password

the password you are to use

=item encrypt

whether encryption is required

=item nostart

whether the connection shouldn't be started after config

=back

=head1 AUTHOR

Nelson Ferraz <nferraz at gmail.com>,
based on James Cameron's PPTP Client Debian HOWTO.

=head1 COPYRIGHT

pptpsetup - Point-to-Point Tunneling Protocol setup

Copyright (C) 2006 Nelson Ferraz

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
